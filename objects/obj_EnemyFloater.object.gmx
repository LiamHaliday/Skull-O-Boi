<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_floater</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.15
image_xscale = 0.20
image_yscale = 0.20

EnemySpeed = 1;

seen = false
seenAngle = 32.5;
lampSeen = false

healthF = 100
speedF = 2.0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///image Movement

    if (point_direction(x,y,obj_player1.x,obj_player1.y) &gt; 270 ||
     point_direction(x,y,obj_player1.x,obj_player1.y) &lt; 90)
    {
       image_xscale = -0.20
    }
    else
    {
       image_xscale = 0.20
    }

 
 if (obj_player1.y &lt; y)
 {
  depth = -30
 }
 else
 {
   depth = -10
 }

 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if (   !collision_line( obj_player1.x, obj_player1.y, x, y, obj_wall_flat, false, false )
    &amp;&amp; !collision_line( obj_player1.x, obj_player1.y, x, y, obj_wall_side, false, false )
    &amp;&amp; !collision_line( obj_player1.x, obj_player1.y, x, y, obj_side_wall_side, false, false )
    &amp;&amp; !collision_line( obj_player1.x, obj_player1.y, x, y, obj_wall_side, false, false )
    &amp;&amp; !collision_line( obj_player1.x, obj_player1.y, x, y, obj_side_wall_side, false, false )
    &amp;&amp; !collision_line( obj_player1.x, obj_player1.y, x, y, obj_side_yellowBOTTOM, false, false )
    &amp;&amp; !collision_line( obj_player1.x, obj_player1.y, x, y, obj_side_right, false, false )
    &amp;&amp; !collision_line( obj_player1.x, obj_player1.y, x, y, obj_side_yellow, false, false )
    &amp;&amp; !collision_line( obj_player1.x, obj_player1.y, x, y, obj_walls_yellow, false, false )
    )
{
    //mp_linear_step_object(obj_player1.x, obj_player1.y, 1, obj);  
    //mp_linear_step(obj_player1.x, obj_player1.y, speedF, true);
        if mp_linear_step (obj_player1.x, obj_player1.y, 2.5 , false)
        {
            move_towards_point(obj_player1.x, obj_player1.y, 2.5 );
        }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// LIGHT TRIGGERS


Adjacent = obj_player1.x - x//mouse_x
Opposite = obj_player1.y - y//mouse_y
Hypotenuse = sqrt(( sqr(Adjacent) + sqr(Opposite)))


//point_direction(obj_player1.x,obj_player1.y, x,y) == point_direction(mouse_x,mouse_y, x,y)


point_distance(obj_player1.x,obj_player1.y, x,y)

maxseenhight = point_direction(obj_player1.x,obj_player1.y, mouse_x, mouse_y);


if (point_direction(obj_player1.x,obj_player1.y, x,y) &lt; seenAngle)
{
    if (maxseenhight  &gt; 340)
    {
        maxseenhight -= 340;
    }   
}

if(point_direction(obj_player1.x,obj_player1.y, x,y) &gt; (maxseenhight - seenAngle)
    &amp;&amp; point_direction(obj_player1.x,obj_player1.y, x,y) &lt; (maxseenhight + seenAngle)
    )
{
    if (point_distance(obj_player1.x,obj_player1.y, x,y) &lt; 600)
    {
    seen = true
    }
    else
    {
    seen = false
    }
}
else
{
seen = false
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// seen 
speedF = 2.0
speedF = 0.5 + ((speedF * healthF) / 100)

if (seen &amp;&amp; global.flashlightOn )
{
    healthF--
   //a healthF--
}  
else if (healthF &lt; 100)
{
    healthF++
}

if (healthF &lt;= 0)
{
    instance_destroy()
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
